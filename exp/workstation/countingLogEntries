Monpoly (compiled with ocamlopt -> native code obj files):
Start time : 1420246011
Finish time : 1420246035

It took 24 seconds to count the number of log entries in the 9M log file!
There are 89961 log entries in the log file!

===========================================================================
Monpoly (compiled with ocamlc -> byte code):
Start time : 1420750020
There are 89961 log entries in the log file!
Finish time : 1420750154
It took 134 seconds to count the number of log entries in the 9M log file!


===========================================================================
My log analyzer:
Start time : 1420751328
There are totally 93149 log entries in the log file!

Finish time : 1420751579

It took my log analyzer 251 seconds to count the number of log entries in the 9M log


************************************
After optimization--My Log Analyzer:
Start time : 1420926069
There are 93149 log entries!
It took my log analyzer 19525 ms to count all the log entries in the log file.

Finish time : 1420926089

It took my log analyzer 20 seconds to count all the events in the 9M log ldcc4Monpoly at Siebel

My log analyzer is 570% faster than Monpoly built by ocamlc.
My log analyzer is 20% faster than Monpoly built by ocamlopt.


************************************8
Latest: 

@@Remove regex
There are 93149 log entries in the log file!~!
It took my log analyzer 8.580 seconds to count all the log entries in the log file.

@@Use regex for extracting tuple
There are 93149 log entries in the log file!~!
It took my log analyzer 15.626 seconds to count all the log entries in the log file.



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Use unchecked byte:
Direct memory read use allocateDirect:
In the test with buf size 4 KB, the avg time used is 2411 ms = 2.411 seconds

9.95 times faster than Monpoly's native code
